DEVICE = cpu # {cpu, ngpu, igpu}
DEBUG = no # {yes, no}
IMPL = sycl-cpu # {sycl-cpu, sycl-ngpu, sycl-igpu, sycl-por}
SYCL = dpcpp # {dpcpp, hipsycl}: hipsycl does not support igpu
HIPSYCL_COMPILER = clang # {clang, nvc++}

# Program configuration attributes
ATTRIBUTES=2458285
DIMS=68
CLUSTERS=256
ITERATIONS=20

RED_ATTRS_PACK_CPU=8
RED_DIMS_PACK_CPU=1
RED_ATTRS_PACK_IGPU=128
RED_DIMS_PACK_IGPU=4

RED_ATTRS_PACK_NVIDIA=128
RED_DIMS_PACK_NVIDIA=4
RED_ATTRS_PACK=16
RED_SIMD_WIDTH=8
RED_GROUP_SIZE_IGPU=512

ASSIGN_BLOCK_SIZE_NVIDIA=128
ASSIGN_PACK=16
ASSIGN_GROUP_SIZE_CPU=8
ASSIGN_GROUP_SIZE_IGPU=512
ASSIGN_SIMD_WIDTH=2

CONF_ATTRS=-DATTRIBUTE_SIZE=$(ATTRIBUTES)
CONF_DIMS=-DDIMS=$(DIMS)
CONF_CLUSTERS=-DCLUSTERS=$(CLUSTERS)
CONF_ITERATIONS=-DITERATIONS=$(ITERATIONS)

CONF_RED_ATTRS_PACK_CPU=-DRED_ATTRS_PACK_CPU=$(RED_ATTRS_PACK_CPU)
CONF_RED_DIMS_PACK_CPU=-DRED_DIMS_PACK_CPU=$(RED_DIMS_PACK_CPU)
CONF_RED_ATTRS_PACK_IGPU=-DRED_ATTRS_PACK_IGPU=$(RED_ATTRS_PACK_IGPU)
CONF_RED_DIMS_PACK_IGPU=-DRED_DIMS_PACK_IGPU=$(RED_DIMS_PACK_IGPU)

CONF_RED_ATTRS_PACK_NVIDIA=-DRED_ATTRS_PACK_NVIDIA=$(RED_ATTRS_PACK_NVIDIA)
CONF_RED_DIMS_PACK_NVIDIA=-DRED_DIMS_PACK_NVIDIA=$(RED_DIMS_PACK_NVIDIA)
CONF_RED_ATTRS_PACK=-DRED_ATTRS_PACK=$(RED_ATTRS_PACK)
CONF_RED_SIMD_WIDTH=-DRED_SIMD_WIDTH=$(RED_SIMD_WIDTH)
CONF_RED_GROUP_SIZE_IGPU=-DRED_GROUP_SIZE_IGPU=$(RED_GROUP_SIZE_IGPU)

CONF_ASSIGN_BLOCK_SIZE_NVIDIA=-DASSIGN_BLOCK_SIZE_NVIDIA=$(ASSIGN_BLOCK_SIZE_NVIDIA)
CONF_ASSIGN_PACK=-DASSIGN_PACK=$(ASSIGN_PACK)
CONF_ASSIGN_GROUP_SIZE_CPU=-DASSIGN_GROUP_SIZE_CPU=$(ASSIGN_GROUP_SIZE_CPU)
CONF_ASSIGN_GROUP_SIZE_IGPU=-DASSIGN_GROUP_SIZE_IGPU=$(ASSIGN_GROUP_SIZE_IGPU)
CONF_ASSIGN_SIMD_WIDTH=-DASSIGN_SIMD_WIDTH=$(ASSIGN_SIMD_WIDTH)

# device
CPU = CPU_DEVICE
IGPU = INTEL_GPU_DEVICE
NVIDIA = NVIDIA_DEVICE

PDEVICE = $(CPU)

ifeq ($(DEVICE),ngpu)
  PDEVICE = $(NVIDIA)
else ifeq ($(DEVICE), igpu)
  PDEVICE = $(IGPU)
endif

# implementation
SCPU = SYCL_CPU
SNGPU = SYCL_NGPU
SIGPU = SYCL_IGPU
SPOR = SYCL_PORTABLE

PIMPL = $(SCPU)

ifeq ($(IMPL),sycl-ngpu)
  PIMPL = $(SNGPU)
else ifeq ($(IMPL), sycl-igpu)
  PIMPL = $(SIGPU)
else ifeq ($(IMPL), sycl-por)
  PIMPL = $(SPOR)
endif

ifeq ($(SYCL), dpcpp)
	CC = icpx
	CFLAGS = -O3 -fsycl -D$(PDEVICE) -D$(PIMPL) -DDPCPP \
		$(CONF_ATTRS) $(CONF_DIMS) $(CONF_CLUSTERS) $(CONF_ITERATIONS) \
		$(CONF_RED_ATTRS_PACK_CPU) $(CONF_RED_DIMS_PACK_CPU) $(CONF_RED_ATTRS_PACK_IGPU) $(CONF_RED_DIMS_PACK_IGPU) \
		$(CONF_RED_ATTRS_PACK_NVIDIA) $(CONF_RED_DIMS_PACK_NVIDIA) $(CONF_RED_ATTRS_PACK) $(CONF_RED_SIMD_WIDTH) \
		$(CONF_RED_GROUP_SIZE_IGPU) $(CONF_ASSIGN_BLOCK_SIZE_NVIDIA) $(CONF_ASSIGN_PACK) $(CONF_ASSIGN_GROUP_SIZE_CPU) \
		$(CONF_ASSIGN_GROUP_SIZE_IGPU) $(CONF_ASSIGN_SIMD_WIDTH)
	CLINK = -fsycl-device-code-split=per_kernel

	ifeq ($(PDEVICE), $(NVIDIA))
		CC = clang++
		CFLAGS += -w -fsycl-targets=nvptx64-nvidia-cuda
	endif
else
	ifeq ($(PDEVICE), $(IGPU))
		$(error 'DEVICE=igpu' option is not allowed in conjunction to 'SYCL=hipsycl'.)
	endif
	CC = syclcc
	CFLAGS = -O3 -D$(PDEVICE) -D$(PIMPL) -DHIPSYCL  \
		$(CONF_ATTRS) $(CONF_DIMS) $(CONF_CLUSTERS) $(CONF_ITERATIONS) \
		$(CONF_RED_ATTRS_PACK_CPU) $(CONF_RED_DIMS_PACK_CPU) $(CONF_RED_ATTRS_PACK_IGPU) $(CONF_RED_DIMS_PACK_IGPU) \
		$(CONF_RED_ATTRS_PACK_NVIDIA) $(CONF_RED_DIMS_PACK_NVIDIA) $(CONF_RED_ATTRS_PACK) $(CONF_RED_SIMD_WIDTH) \
		$(CONF_RED_GROUP_SIZE_IGPU) $(CONF_ASSIGN_BLOCK_SIZE_NVIDIA) $(CONF_ASSIGN_PACK) $(CONF_ASSIGN_GROUP_SIZE_CPU) \
		$(CONF_ASSIGN_GROUP_SIZE_IGPU) $(CONF_ASSIGN_SIMD_WIDTH)
	ifeq ($(PDEVICE),$(NVIDIA))
		ifeq ($(HIPSYCL_COMPILER),nvc++)
			CFLAGS += --hipsycl-targets="cuda-nvcxx:cc61"
		else
			CFLAGS += --hipsycl-targets="cuda:sm_61" -I/usr/local/cuda/include
			CLINK = -L/usr/local/cuda/include
		endif
	else
		CFLAGS += --hipsycl-targets="omp" --hipsycl-use-accelerated-cpu -w
	endif  
endif

ifeq ($(DEBUG),yes)
	CFLAGS += -g
endif

k_means: ./device/device.o main.o
	$(CC) $(CFLAGS) $(CLINK) main.o ./device/device.o -o k_means

main.o: ./device/device.o
	$(CC) $(CFLAGS) main.cpp -c -o main.o

./device/device.o: ./device/device.hpp
	$(CC) $(CFLAGS) ./device/device.cpp -c -o ./device/device.o

run: k_means
	./k_means ../../data/USCensus1990.data.txt

.PHONY: clean
clean:
	rm -f k_means \
	*.o \
	./device/*.o